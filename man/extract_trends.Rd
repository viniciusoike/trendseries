% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_trends.R
\name{extract_trends}
\alias{extract_trends}
\title{Extract trends from time series objects}
\usage{
extract_trends(
  ts_data,
  methods = "hp",
  window = NULL,
  smoothing = NULL,
  band = NULL,
  params = list(),
  .quiet = FALSE
)
}
\arguments{
\item{ts_data}{A time series object (\code{ts}, \code{xts}, or \code{zoo}) or any object
convertible via tsbox.}

\item{methods}{\verb{[character()]} Character vector of trend methods.
Options: \code{"hp"}, \code{"bk"}, \code{"cf"}, \code{"ma"}, \code{"stl"}, \code{"loess"}, \code{"spline"}, \code{"poly"},
\code{"bn"}, \code{"ucm"}, \code{"hamilton"}, \code{"exp_simple"}, \code{"exp_double"}, \code{"ewma"}, \code{"wma"},
\code{"zlema"}, \code{"triangular"}, \code{"sg"}, \code{"kernel"}, \code{"butter"}, \code{"kalman"}.
Default is \code{"hp"}.}

\item{window}{\verb{[numeric(1)] | NULL} Unified window/period parameter for moving
average methods (ma, wma, zlema, triangular, stl, sg, ewma). Must be positive.
If NULL, uses frequency-appropriate defaults. For EWMA, specifies the window
size when using TTR's optimized implementation. Cannot be used simultaneously
with \code{smoothing} for EWMA method.}

\item{smoothing}{\verb{[numeric(1)] | NULL} Unified smoothing parameter for smoothing
methods (hp, loess, spline, exp_*, ewma, kernel, kalman).
For hp: use large values (1600+) or small values (0-1) that get converted.
For EWMA: specifies the alpha parameter (0-1) for traditional exponential smoothing.
Cannot be used simultaneously with \code{window} for EWMA method.
For kernel: multiplier of optimal bandwidth (1.0 = optimal, <1 = less smooth, >1 = more smooth).
For kalman: controls the ratio of measurement to process noise (higher = more smoothing).
For others: typically 0-1 range.}

\item{band}{\verb{[numeric(2)] | NULL} Unified band parameter for bandpass filters
(bk, cf, butter). Both values must be positive.
For bk/cf: Provide as \code{c(low, high)} where low/high are periods in quarters, e.g., \code{c(6, 32)}.
For butter: Provide as \code{c(cutoff, order)} where cutoff is normalized frequency (0-1) and order is integer, e.g., \code{c(0.1, 2)}.}

\item{params}{\verb{[list()]} Optional list of method-specific parameters for fine control:
\code{alma_offset}, \code{alma_sigma}, \code{exp_beta}, \code{poly_degree}, \code{bn_ar_order}, \code{hamilton_h},
\code{hamilton_p}, \code{sg_poly_order}, \code{kernel_type}, \code{butter_type}, \code{kalman_measurement_noise},
\code{kalman_process_noise}.}

\item{.quiet}{\verb{[logical(1)]} If \code{TRUE}, suppress informational messages.}
}
\value{
If single method, returns a \code{ts} object. If multiple methods, returns
a named list of \code{ts} objects.
}
\description{
Extract trend components from time series objects using various econometric methods.
Designed for monthly and quarterly economic data analysis. Returns trend components
as time series objects or a list of time series.
}
\details{
This function focuses on monthly (frequency = 12) and quarterly (frequency = 4)
economic data. It uses established econometric methods with appropriate defaults:
\itemize{
\item \strong{HP Filter}: lambda=1600 (quarterly), lambda=14400 (monthly)
\item \strong{Baxter-King}: Bandpass filter for business cycles (6-32 quarters default)
\item \strong{Christiano-Fitzgerald}: Asymmetric bandpass filter
\item \strong{Moving Average}: Centered, frequency-appropriate windows
\item \strong{STL}: Seasonal-trend decomposition
\item \strong{Loess}: Local polynomial regression
\item \strong{Spline}: Smoothing splines
\item \strong{Polynomial}: Linear/polynomial trends
\item \strong{Beveridge-Nelson}: Permanent/transitory decomposition
\item \strong{UCM}: Unobserved Components Model (local level)
\item \strong{Hamilton}: Regression-based alternative to HP filter
\item \strong{Exponential Smoothing}: Simple and double exponential smoothing
\item \strong{Advanced MA}: EWMA, ALMA, DEMA, HMA variations
\item \strong{Savitzky-Golay}: Polynomial smoothing that preserves peaks and valleys
\item \strong{Kernel Smoother}: Non-parametric regression with various kernel functions
\item \strong{Butterworth}: Clean frequency domain low-pass filtering
\item \strong{Kalman Smoother}: Adaptive filtering for noisy time series
}

\strong{Parameter Usage Notes}:
\itemize{
\item For EWMA: Use either \code{window} (TTR optimization) OR \code{smoothing} (alpha parameter), not both
\item For Butterworth: The \code{band} parameter expects \code{c(cutoff, order)} where cutoff is 0-1 normalized frequency
\item For Kalman: Use \code{smoothing} parameter or \code{params} list for fine control of noise parameters
}
}
\examples{
# Single method
hp_trend <- extract_trends(AirPassengers, methods = "hp")

# Multiple methods with unified smoothing
smooth_trends <- extract_trends(
  AirPassengers,
  methods = c("hp", "loess", "ewma"),
  smoothing = 0.3
)

# EWMA with window (uses TTR optimization)
ewma_window <- extract_trends(AirPassengers, methods = "ewma", window = 12)

# EWMA with alpha (traditional formula)
ewma_alpha <- extract_trends(AirPassengers, methods = "ewma", smoothing = 0.2)

# Moving averages with unified window
ma_trends <- extract_trends(
  AirPassengers,
  methods = c("ma", "wma", "zlema", "triangular"),
  window = 8
)

# Bandpass filters with unified band
bp_trends <- extract_trends(
  AirPassengers,
  methods = c("bk", "cf"),
  band = c(6, 32)
)

# Signal processing methods with specific parameters
finance_trends <- extract_trends(
  AirPassengers,
  methods = c("sg", "kalman", "butter"),
  window = 9,  # For Savitzky-Golay
  band = c(0.05, 2),  # Butterworth cutoff and order
  params = list(kalman_measurement_noise = 0.1)  # Kalman-specific parameter
)

# Advanced: fine-tune specific methods
custom_trends <- extract_trends(
  AirPassengers,
  methods = c("sg", "kalman"),
  window = 7,
  params = list(sg_poly_order = 3)
)

}
